name: "Publish"

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: "Setup Node.js environment"
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: "Checkout branch: ${{ github.ref }}"
        uses: actions/checkout@v2
        with:
          ## Only a single commit is fetched by default
          ## Set `fetch-depth: 0` to fetch all history
          fetch-depth: 0
          path: main
        
      - name: "Checkout branch: gh-pages"
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages

      - name: "Clean install dependencies and build"
        working-directory: main
        run: |
          npm install hexo-cli -g
          npm install
          cp -f custom/default.styl node_modules/hexo-theme-icarus/source/css
          cp -f custom/inline.js node_modules/kramed/lib/rules/
          npm run clean
          npm run build

      - name: "Copy dist files"
        ## Need to specify a working-directory, otherwise it cannot find the path
        working-directory: gh-pages
        run: |
          rm -rf *
          ls -a
          cat .gitignore
          # git ls-files 
          # git rm -f *
          # git filter-branch --force *
          # ls -a
          mv -f ../main/public/* .

      # - name: "Deploy on cloud-server"
      #   uses: webfactory/ssh-agent@v0.4.1
      #   with:
      #     ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      #   run: |
      #     ssh-keyscan ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
      #     ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "git -C ${{ secrets.REPO_PATH}} pull"
      #     ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "sh /home/ubuntu/script/deploy.sh"

      - name: "Deploy on gh-pages"
        working-directory: gh-pages
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A
          git commit -m "deploy"
          git push
